{"id":"node_modules/uint8arrays/cjs/src/xor.js","dependencies":[{"name":"/Users/tamaz/Projects/Site/example/web-examples/dapps/ethereum-provider/package.json","includedInParent":true,"mtime":1721990127148},{"name":"/Users/tamaz/Projects/Site/example/web-examples/dapps/ethereum-provider/node_modules/uint8arrays/package.json","includedInParent":true,"mtime":1721477764349},{"name":"./alloc.js","loc":{"line":5,"column":20,"index":99},"parent":"/Users/tamaz/Projects/Site/example/web-examples/dapps/ethereum-provider/node_modules/uint8arrays/cjs/src/xor.js","resolved":"/Users/tamaz/Projects/Site/example/web-examples/dapps/ethereum-provider/node_modules/uint8arrays/cjs/src/alloc.js"},{"name":"./util/as-uint8array.js","loc":{"line":6,"column":27,"index":141},"parent":"/Users/tamaz/Projects/Site/example/web-examples/dapps/ethereum-provider/node_modules/uint8arrays/cjs/src/xor.js","resolved":"/Users/tamaz/Projects/Site/example/web-examples/dapps/ethereum-provider/node_modules/uint8arrays/cjs/src/util/as-uint8array.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar alloc = require('./alloc.js');\nvar asUint8array = require('./util/as-uint8array.js');\n\nfunction xor(a, b) {\n  if (a.length !== b.length) {\n    throw new Error('Inputs should have the same length');\n  }\n  const result = alloc.allocUnsafe(a.length);\n  for (let i = 0; i < a.length; i++) {\n    result[i] = a[i] ^ b[i];\n  }\n  return asUint8array.asUint8Array(result);\n}\n\nexports.xor = xor;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/uint8arrays/cjs/src/xor.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/uint8arrays/cjs/src/xor.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/uint8arrays/cjs/src/xor.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/uint8arrays/cjs/src/xor.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/uint8arrays/cjs/src/xor.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/uint8arrays/cjs/src/xor.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/uint8arrays/cjs/src/xor.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/uint8arrays/cjs/src/xor.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/uint8arrays/cjs/src/xor.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/uint8arrays/cjs/src/xor.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/uint8arrays/cjs/src/xor.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/uint8arrays/cjs/src/xor.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/uint8arrays/cjs/src/xor.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/uint8arrays/cjs/src/xor.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/uint8arrays/cjs/src/xor.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/uint8arrays/cjs/src/xor.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/uint8arrays/cjs/src/xor.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/uint8arrays/cjs/src/xor.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/uint8arrays/cjs/src/xor.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/uint8arrays/cjs/src/xor.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}}],"sources":{"node_modules/uint8arrays/cjs/src/xor.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar alloc = require('./alloc.js');\nvar asUint8array = require('./util/as-uint8array.js');\n\nfunction xor(a, b) {\n  if (a.length !== b.length) {\n    throw new Error('Inputs should have the same length');\n  }\n  const result = alloc.allocUnsafe(a.length);\n  for (let i = 0; i < a.length; i++) {\n    result[i] = a[i] ^ b[i];\n  }\n  return asUint8array.asUint8Array(result);\n}\n\nexports.xor = xor;\n"},"lineCount":20}},"error":null,"hash":"5b97a2fdfe25059a839dcf267f15dacc","cacheData":{"env":{}}}